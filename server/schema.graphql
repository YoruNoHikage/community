scalar Upload
scalar DateTime

type Query {
  me: User

  allStructures: [Structure!]
  allEvents: [Event!]

  structure(id: ID!): Structure
  event(id: ID!): Event
  location(id: ID!): Location
  country(name: String!): [Location!]
}

type Mutation {
  signup(
    email: String!
    password: String!
  ): AuthPayload!
  login(
    email: String!
    password: String!
  ): AuthPayload!

  createStructure(
    type: StructureType!
    name: String!
    about: String!
    location: LocationInput!
  ): Structure
  deleteStructure(id: ID!): Structure
  addImageToStructure(id: ID! file: Upload!): Event!

  createEvent(
    name: String!
    about: String!
    startAt: DateTime!
    endAt: DateTime!
    location: LocationInput!
    structuresId: [ID!]
  ): Event
  deleteEvent(id: ID!): Event
  addImageToEvent(id: ID! file: Upload!): Event!
}

type AuthPayload {
  token: String!
  user: User!
}

input LocationInput {
  country: String!
  city: String!
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  avatar: Image
  person: Person
}

type Person {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User
  name: String!
  structures: [Structure!]
  games: [Game!]
  events: [Event!]
}

enum StructureType {
  STUDIO
  ASSOCIATION
  ORGANISATION
}

type Structure {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: StructureType!
  name: String!
  about: String!
  location: Location!
  people: [Person!]
  structures: [Structure!]
  images: [Image!]
  games: [Game!]
  events: [Event!]
}

type Game {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  releasedAt: DateTime
  name: String!
  about: String!
  authors: [Person!]
  structures: [Structure!]
  images: [Image!]
  events: [Event!]
}

type Event {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  startAt: DateTime!
  endAt: DateTime!
  name: String!
  about: String!
  location: Location
  images: [Image!]
  authors: [Person!]
  structures: [Structure!]
  games: [Game!]
}

type Image {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  width: Int
  height: Int
  mimetype: String!
}

type Location {
  id: ID!
  country: String!
  city: String!
  latitude: Float
  longitude: Float
  structures: [Structure!]
  events: [Event!]
}
